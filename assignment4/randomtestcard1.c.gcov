        -:    0:Source:randomtestcard1.c
        -:    0:Graph:randomtestcard1.gcno
        -:    0:Data:randomtestcard1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    0:Source is newer than graph
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include "rngs.h"
        -:    5:#include <stdio.h>
        -:    6:#include <math.h>
        -:    7:#include <stdlib.h>
        -:    8:#include <assert.h>
        -:    9:#include<time.h>
        -:   10:
        1:   11:int main(){
        1:   12:  srand(time(NULL));
        1:   13:  int i, n, r, p, handpos = 0, choice1 = 0, choice2 = 0, choice3 = 0, bonus = 0;
        -:   14:  int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron,great_hall};
        -:   15:
        1:   16:  struct gameState G, test;
        1:   17:  printf("Testing baron\n");
       51:   18:  printf("RANDOM TESTS\n");
       50:   19:  for(n=0; n<50; n++){
       50:   20:     int players = (rand() % 50);
        -:   21:     int seed =(rand() % 5000);
       50:   22:
       50:   23:     initializeGame(players, k, seed, &G);
       50:   24:     printf("\n--------Running round %d/50--------\n", n+1);
       50:   25:     memcpy(&test, &G, sizeof(struct gameState));
        -:   26:     cardEffect(baron, choice1, choice2, choice3, &G, handpos, &bonus);
       50:   27:
        -:   28:     p = whoseTurn(&test);
       50:   29:
       50:   30:     if(G.hand[p][test.handCount[p]-1] != -1)
        -:   31:       printf("Passed where Baron card was added to the players hand\n");
    #####:   32:     else
        -:   33:       printf("Failed where Baron card was not added to the players hand\n");
        -:   34:
       50:   35:     //Check if player played Great Hall card
    #####:   36:     if(test.playedCardCount+1 == G.playedCardCount)
        -:   37:       printf("Passed where player played Baron card\n");
       50:   38:     else
        -:   39:       printf("Failed where player did not play Baron card\n");
        -:   40:
       50:   41:     //Discard Test: Check if card was discarded
       43:   42:     if(test.discardCount[p] == G.discardCount[p])
        -:   43:       printf("Passed where the Baron was discarded\n");
        -:   44:     else
        7:   45:     {
        -:   46:       printf("Failed where the Baron was not discarded.\n");
        -:   47:     }
        -:   48:
       50:   49:     //Action Test: Check if the +1 Action was added
    #####:   50:     if(test.numActions+1 == G.numActions)
        -:   51:       printf("Passed where an extra action was added\n");
       50:   52:     else
        -:   53:       printf("Failed where an extra action was not added\n");
        -:   54:
        1:   55:    }
        -:   56:    printf("\nTEST COMPLETE!\n");
        -:   57:  }
